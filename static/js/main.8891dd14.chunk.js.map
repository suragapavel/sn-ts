{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Users/users.module.css","reportWebVitals.tsx","redux/profile-reducer.ts","redux/sidebar-reducer.ts","redux/dialogs-reducer.ts","redux/users-reducer.ts","redux/redux-store.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Users/UsersContainer.tsx","components/Users/Users.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","posts","id","message","likesCount","newPostText","dialogs","name","messages","newMessageBody","users","rootReducers","combineReducers","profilePage","state","action","type","newPost","Date","getTime","newText","dialogsPage","body","sidebar","usersPage","map","u","userId","followed","store","createStore","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","activeLink","active","ProfileInfo","imageProfile","descriptionBlock","Post","props","MyPosts","postsElements","p","newPostElement","React","createRef","postsBlock","onChange","text","current","value","onPostChange","ref","onClick","addPost","MyPostsContainer","connect","dispatch","Profile","DialogItem","path","dialog","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","e","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyAC","follow","followAC","unFollow","unFollowAC","setUsers","setUsersAC","length","photoUrl","fullName","status","location","city","country","styles","userPhoto","App","render","UsersContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8891dd14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__8wIe8\",\"dialogsItems\":\"Dialog_dialogsItems__OhuK7\",\"active\":\"Dialog_active__BLz8b\",\"messages\":\"Dialog_messages__16dsu\",\"message\":\"Dialog_message__E8oQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2TIfB\",\"imageProfile\":\"ProfileInfo_imageProfile__2CiMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1YS3t\",\"posts\":\"MyPosts_posts__1dvIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__13Flp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2TtpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__9r6qT\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsType} from \"./store\";\r\n\r\ntype AddPostActionType = ReturnType<typeof addPostAC>\r\ntype UpdateNewTextActionType = ReturnType<typeof updateNewPostAC>\r\nexport type ActionPostType = AddPostActionType | UpdateNewTextActionType\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 4, message: 'It\\'s my first post', likesCount: 11},\r\n    ] as PostsType[],\r\n    newPostText: 'it',\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case 'UPDATE-NEW-TEXT': {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = () => {\r\n    return {\r\n        type: 'ADD-POST'\r\n    } as const\r\n}\r\nexport const updateNewPostAC = (newText: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-TEXT',\r\n        newText: newText\r\n    } as const\r\n}","import {ActionsType, SideBarType} from \"./store\";\r\n\r\nlet initialState: SideBarType = {}\r\n\r\nexport const sidebarReducer = (state = initialState, action: ActionsType) => {\r\n    return state\r\n}","import {ActionsType} from \"./store\";\r\n\r\ntype UpdateNewMessageBodyActionType = ReturnType<typeof updateNewMessageBodyAC>\r\ntype SendMessageActionType = ReturnType<typeof sendMessageAC>\r\nexport type ActionMessageType = UpdateNewMessageBodyActionType | SendMessageActionType\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'},\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ] as MessagesType[],\r\n    newMessageBody: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionsType):InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case 'UPDATE-NEW-MESSAGE-BODY': {\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        }\r\n        case 'SEND-MESSAGE': {\r\n            let body = state.newMessageBody\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const updateNewMessageBodyAC = (body: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-MESSAGE-BODY',\r\n        body: body\r\n    } as const\r\n}\r\nexport const sendMessageAC = () => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n    } as const\r\n}\r\n","import {ActionsType} from \"./store\";\r\n\r\n\r\ntype FollowActionType = ReturnType<typeof followAC>\r\ntype UnFollowActionType = ReturnType<typeof unFollowAC>\r\ntype SetUsersActionType = ReturnType<typeof setUsersAC>\r\nexport type ActionUsersType = FollowActionType | UnFollowActionType | SetUsersActionType\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    message: string\r\n    location: LocationType\r\n}\r\nlet initialState = {\r\n    users: [\r\n\r\n    ] as UsersType[],\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: ActionUsersType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'SET-USERS': {\r\n            return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userId:number) => ({type: 'FOLLOW', userId} as const)\r\nexport const unFollowAC = (userId:number) => ({type: 'UNFOLLOW', userId} as const)\r\nexport const setUsersAC = (users:UsersType[]) => ({type: 'SET-USERS', users} as const)\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {StoreType} from \"./store\";\r\nimport {usersReducer} from \"./users-reducer\";\r\n\r\nexport const rootReducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    sidebar:sidebarReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducers>\r\n\r\nexport let store: any = createStore(rootReducers)\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img src='https://cdn.logo.com/hotlink-ok/logo-social.png'/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to={'/profile'} activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to={'/dialogs'} activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Settings</a>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.imageProfile} src={'https://www.imgacademy.com/themes/custom/imgacademy/images/helpbox-contact.jpg'}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava+ description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.item}>\r\n                <img\r\n                    src={'https://avatars.mds.yandex.net/get-kino-vod-films-gallery/28788/47e2fd514411e18b76af786d7417062d/600x380'}/>\r\n                {props.message}\r\n                <div>\r\n                    <span>like</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent, RefObject} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {ActionsType} from '../../../redux/store'\r\nimport {PostsPropsType} from \"./MyPostsContainer\";\r\nimport {PostsType} from \"../../../redux/profile-reducer\";\r\n\r\ntype MyPostsPropsType = PostsPropsType &  {\r\n    updateNewPostText: (text:string)=> void\r\n    addPost: () => void\r\n    posts: PostsType[]\r\n    newPostText: string\r\n}\r\n\r\nexport const MyPosts: React.FC<PostsPropsType> = (props) => {\r\n\r\n    let postsElements = props.posts.map((p: PostsType) => <Post message={p.message} likesCount={p.likesCount}/>)\r\n    let newPostElement = React.createRef<any>()\r\n    const onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current.value\r\n        props.onPostChange(text)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React, {ChangeEvent} from 'react';\r\nimport {addPostAC, PostsType, updateNewPostAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: () => void\r\n    onPostChange: (text:string) => void\r\n}\r\nexport type PostsPropsType = MapStatePropsType & MapDispatchPropsType\r\nlet mapStateToProps = (state: AppStateType):MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch):MapDispatchPropsType => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        onPostChange: (text: string) => {\r\n            dispatch(updateNewPostAC(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n    // profilePage: ProfilePageType\r\n    // dispatch: (action: ActionsType) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialog.module.css'\r\nimport {DialogsType} from \"../../../redux/dialogs-reducer\";\r\n\r\n\r\nconst DialogItem:React.FC<DialogsType> = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (<div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialog.module.css'\r\nimport {MessagesType} from \"../../../redux/dialogs-reducer\";\r\n\r\nconst Message:React.FC<MessagesType> = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {ChangeEvent} from \"react\";\r\nimport s from './Dialog.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n    DialogsPageType,\r\n} from '../../redux/store'\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {DialogsType, MessagesType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\ntype DialogsPagePropsType = DialogsPropsType & {\r\n    updateNewMessageBody: (body:string) => void\r\n    sendMessage: ()=>void\r\n    dialogsPage:DialogsPageType\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogs.map((d: DialogsType) => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements = state.messages.map((m: MessagesType) => <Message message={m.message} id={m.id}/>)\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <div>\r\n                        <div><textarea value={newMessageBody}\r\n                                       onChange={onNewMessageChange}\r\n                                       placeholder={'Enter your message'}/></div>\r\n                        <div>\r\n                            <button onClick={onSendMessageClick}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageAC, updateNewMessageBodyAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {DialogsPageType} from \"../../redux/store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (body:string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType):MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch):MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageAC())\r\n        },\r\n        updateNewMessageBody: (body: string) => {\r\n            dispatch(updateNewMessageBodyAC(body))\r\n        }\r\n    }\r\n}\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {followAC, setUsersAC, unFollowAC, UsersType} from \"../../redux/users-reducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToProps = {\r\n    users: UsersType[]\r\n}\r\nexport type MapDispatchToProps = {\r\n    follow: (userId:number) => void\r\n    unFollow: (userId:number) => void\r\n    setUsers: (users:UsersType[]) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToProps => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unFollow: (userId) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React from \"react\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport styles from './users.module.css'\r\nimport {MapDispatchToProps} from \"./UsersContainer\";\r\nimport * as axios from 'axios'\r\n\r\ntype UsersPropsType = MapDispatchToProps & {\r\n    users: UsersType[]\r\n}\r\nexport const Users = (props: UsersPropsType) => {\r\n    if (props.users.length === 0) {\r\n        props.setUsers([{\r\n            id: 1,\r\n            photoUrl: 'https://static-cdn.jtvnw.net/jtv_user_pictures/d01e9ee1-a1fc-49a0-b135-cfafd8254382-profile_image-300x300.png',\r\n            followed: true,\r\n            fullName: 'Dan',\r\n            status: 'boss',\r\n            location: {city: 'Minsk', country: 'Belarus'}\r\n        },\r\n            {\r\n                id: 2,\r\n                photoUrl: 'https://static-cdn.jtvnw.net/jtv_user_pictures/d01e9ee1-a1fc-49a0-b135-cfafd8254382-profile_image-300x300.png',\r\n                followed: true,\r\n                fullName: 'Sasha',\r\n                status: 'boss',\r\n                location: {city: 'Minsk', country: 'Belarus'}\r\n            },\r\n            {\r\n                id: 3,\r\n                photoUrl: 'https://static-cdn.jtvnw.net/jtv_user_pictures/d01e9ee1-a1fc-49a0-b135-cfafd8254382-profile_image-300x300.png',\r\n                followed: true,\r\n                fullName: 'Bob',\r\n                status: 'boss',\r\n                location: {city: 'Minsk', country: 'Belarus'}\r\n            },\r\n            {\r\n                id: 4,\r\n                photoUrl: 'https://static-cdn.jtvnw.net/jtv_user_pictures/d01e9ee1-a1fc-49a0-b135-cfafd8254382-profile_image-300x300.png',\r\n                followed: false,\r\n                fullName: 'Alex',\r\n                status: 'boss',\r\n                location: {city: 'Minsk', country: 'Belarus'}\r\n            }] as UsersType[])\r\n    }\r\n    return <div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n<span>\r\n    <div>\r\n        <img src={u.photoUrl} className={styles.userPhoto}/>\r\n    </div>\r\n    <div>\r\n        {u.followed\r\n            ? <button onClick={() => {\r\n                props.unFollow(u.id)\r\n            }}>Unfollow</button>\r\n            : <button onClick={() => {\r\n                props.follow(u.id)\r\n            }}>Follow</button>\r\n        }\r\n    </div>\r\n    <span>\r\n        <span><div>{u.fullName}</div>\r\n            <div>{u.status}</div>\r\n        </span>\r\n        <span><div>{u.location.city}</div>\r\n            <div>{u.location.country}</div></span>\r\n    </span>\r\n</span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\n\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\n\ntype AppPropsType = {\n    //store: StoreType\n    //dispatch: (action: AddPostActionType | UpdateNewTextActionType) => void\n}\n\n\nconst App: React.FC<AppPropsType> = (props) => {\n    return (\n        <BrowserRouter>\n            <div className={'app-wrapper'}>\n                <Header/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path={'/dialogs'} render={() => <DialogsContainer />}/>\n                    <Route path={'/profile'} render={() => <Profile/>}/>\n                    <Route path={'/users'} render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './redux/redux-store'\nimport {RootStateType, StoreType} from \"./redux/store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n// const rerenderEntireTree = (state: RootStateType) => {\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n// }\n// rerenderEntireTree(store.getState())\n//\n// store.subscribe(()=>{\n//     let state = store.getState()\n//     rerenderEntireTree(state)});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2wxbi\",\"item\":\"Navbar_item__1nvKU\",\"activeLink\":\"Navbar_activeLink__2Os2B\"};"],"sourceRoot":""}